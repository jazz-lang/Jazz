/// This file contains methods for integer primitives

import "libc.jazz"
import "alloc.jazz"

pub func (v: *i32) power(val: i32) i32 {
	var f = *v;
	var p = pow(f as f64,val as f64);
	return p as i32;
}

pub func (v: *i32) toString() *char {
	var buffer = malloc(8 as usize) as *char;
	sprintf(buffer,"%i",*v);

	return buffer;
}

pub func (v: *i32) toBytes() *u8 {
	var buf = alloc(sizeof(i32));
	var n = *v;
	buf[0] = n as u8;
	buf[1] = (n >> 8) as u8;
	buf[2] = (n >> 16) as u8;
	buf[3] = (n >> 24) as u8;

	return buf;
}

pub func (v: *i64) toBytes() *u8 {
	var buf = alloc(sizeof(i64));
	var n = *v;

	buf[0] = n as u8;
	buf[1] = (n >> 8) as u8;
	buf[2] = (n >> 16) as u8;
	buf[3] = (n >> 24) as u8;
	buf[4] = (n >> 32) as u8;
	buf[5] = (n >> 40) as u8;
	buf[6] = (n >> 48) as u8;
	buf[7] = (n >> 56) as u8;
	return buf;
}

pub func (v: *i16) toBytes() *u8 {
	var buf = alloc(sizeof(i16));
	var n = *v;
	buf[0] = n as u8;
	buf[1] = (n >> 8) as u8;

	return buf;
}

pub func (v: *i64) power(val: i64) i64 {
	var f = *v;
	var p = pow(f as f64,val as f64);
	return p as i64;
} 

pub func (v: *i64) toString() *char {
	var buffer = malloc(16 as usize) as *char;
	sprintf(buffer,"%li",*v);

	return buffer;
}


