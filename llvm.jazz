#if __linux__ or __macos__
link 'pthread'
link  'LLVM-7'


struct LLVMAttributeRef()
struct LLVMBasicBlockRef()
struct LLVMBinaryRef()
struct LLVMBuilderRef()
struct LLVMComdatRef()
struct LLVMContextRef()
struct LLVMDiagnosticRef()
struct LLVMDIBuilderRef()
struct LLVMJITEventListenerRef()
struct LLVMMemoryBufferRef()
struct LLVMMetadataRef()
struct LLVMModuleFlagRef()
struct LLVMModuleProviderRef()
struct LLVMModuleRef()
struct LLVMNamedMDNodeRef()
struct LLVMPassManagerRef()
struct LLVMPassRegistryRef()
struct LLVMTypeRef()
struct LLVMUseRef()
struct LLVMValueMetadataEntry()
struct LLVMValueRef()


foreign LLVMInt1TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMInt8TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMInt16TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMInt32TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMInt64TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMInt128TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMIntTypeInContext(*LLVMContextRef,usize) *LLVMTypeRef
foreign LLVMInt1Type() *LLVMTypeRef
foreign LLVMInt8Type() *LLVMTypeRef
foreign LLVMInt16Type() *LLVMTypeRef
foreign LLVMInt32Type() *LLVMTypeRef
foreign LLVMInt64Type() *LLVMTypeRef
foreign LLVMInt128Type() *LLVMTypeRef
foreign LLVMIntType(usize) *LLVMTypeRef
foreign LLVMGetIntTypeWidth(*LLVMTypeRef) usize
foreign LLVMHalfTypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMFloatTypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMDoubleTypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMX86FP80TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMFP128TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMPPCFP128TypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMHalfType() *LLVMTypeRef
foreign LLVMFloatType() *LLVMTypeRef
foreign LLVMDoubleType() *LLVMTypeRef
foreign LLVMX86FP80Type() *LLVMTypeRef
foreign LLVMFP128Type() *LLVMTypeRef
foreign LLVMPPCFP128Type() *LLVMTypeRef
foreign LLVMFunctionType(*LLVMTypeRef,**LLVMTypeRef,usize,LLVMBool) *LLVMTypeRef
foreign LLVMIsFunctionVarArg(*LLVMTypeRef) LLVMBool
foreign LLVMGetReturnType(*LLVMTypeRef) *LLVMTypeRef
foreign LLVMCountParamTypes (*LLVMTypeRef) usize
foreign LLVMGetParamTypes(*LLVMTypeRef,out **LLVMTypeRef) void
foreign LLVMStructTypeInContext(*LLVMContextRef,**LLVMTypeRef,usize,LLVMBool) *LLVMTypeRef
foreign LLVMStructType(**LLVMTypeRef,usize,LLVMBool) *LLVMTypeRef
foreign LLVMStructCreateNamed(*LLVMContextRef,*ubyte) *LLVMTypeRef
foreign LLVMGetStructName(*LLVMTypeRef) *ubyte
foreign LLVMStructSetBody(*LLVMTypeRef,**LLVMTypeRef,usize,LLVMBool) void
foreign LLVMCountStructElementTypes(*LLVMTypeRef) void
foreign LLVMGetStructElementTypes(*LLVMTypeRef,**LLVMTypeRef) void
foreign	LLVMStructGetTypeAtIndex(*LLVMTypeRef,usize) *LLVMTypeRef
foreign LLVMIsPackedStruct(*LLVMTypeRef) LLVMBool
foreign LLVMIsOpaqueStruct(*LLVMTypeRef) LLVMBool
foreign LLVMIsLiteralStruct(*LLVMTypeRef) LLVMBool
foreign LLVMVoidTypeInContext(*LLVMContextRef) *LLVMTypeRef
foreign LLVMVoidType() *LLVMTypeRef

enum LLVMTypeKind (
    LLVMVoidTypeKind, LLVMHalfTypeKind, LLVMFloatTypeKind, LLVMDoubleTypeKind,
    LLVMX86_FP80TypeKind, LLVMFP128TypeKind, LLVMPPC_FP128TypeKind, LLVMLabelTypeKind,
    LLVMIntegerTypeKind, LLVMFunctionTypeKind, LLVMStructTypeKind, LLVMArrayTypeKind,
    LLVMPointerTypeKind, LLVMVectorTypeKind, LLVMMetadataTypeKind, LLVMX86_MMXTypeKind,
    LLVMTokenTypeKind
)

enum LLVMLinkage(
    LLVMExternalLinkage, LLVMAvailableExternallyLinkage, LLVMLinkOnceAnyLinkage, LLVMLinkOnceODRLinkage,
    LLVMLinkOnceODRAutoHideLinkage, LLVMWeakAnyLinkage, LLVMWeakODRLinkage, LLVMAppendingLinkage,
    LLVMInternalLinkage, LLVMPrivateLinkage, LLVMDLLImportLinkage, LLVMDLLExportLinkage,
    LLVMExternalWeakLinkage, LLVMGhostLinkage, LLVMCommonLinkage, LLVMLinkerPrivateLinkage,
    LLVMLinkerPrivateWeakLinkage
)


LLVMRet ==1, LLVMBr ==2, LLVMSwitch ==3, LLVMIndirectBr ==4,
  LLVMInvoke ==5, LLVMUnreachable ==7, LLVMCallBr ==67, LLVMFNeg ==66,
  LLVMAdd ==8, LLVMFAdd ==9, LLVMSub ==10, LLVMFSub ==11,
  LLVMMul ==12, LLVMFMul ==13, LLVMUDiv ==14, LLVMSDiv ==15,
  LLVMFDiv ==16, LLVMURem ==17, LLVMSRem ==18, LLVMFRem ==19,
  LLVMShl ==20, LLVMLShr ==21, LLVMAShr ==22, LLVMAnd ==23,
  LLVMOr ==24, LLVMXor ==25, LLVMAlloca ==26, LLVMLoad ==27,
  LLVMStore ==28, LLVMGetElementPtr ==29, LLVMTrunc ==30, LLVMZExt ==31,
  LLVMSExt ==32, LLVMFPToUI ==33, LLVMFPToSI ==34, LLVMUIToFP ==35,
  LLVMSIToFP ==36, LLVMFPTrunc ==37, LLVMFPExt ==38, LLVMPtrToInt ==39,
  LLVMIntToPtr ==40, LLVMBitCast ==41, LLVMAddrSpaceCast ==60, LLVMICmp ==42,
  LLVMFCmp ==43, LLVMPHI ==44, LLVMCall ==45, LLVMSelect ==46,
  LLVMUserOp1 ==47, LLVMUserOp2 ==48, LLVMVAArg ==49, LLVMExtractElement ==50,
  LLVMInsertElement ==51, LLVMShuffleVector ==52, LLVMExtractValue ==53, LLVMInsertValue ==54,
  LLVMFence ==55, LLVMAtomicCmpXchg ==56, LLVMAtomicRMW ==57, LLVMResume ==58,
  LLVMLandingPad ==59, LLVMCleanupRet ==61, LLVMCatchRet ==62, LLVMCatchPad ==63,
  LLVMCleanupPad ==64, LLVMCatchSwitch ==65 

alias LLVMBool = int

foreign printf(*ubyte,...) void
foreign malloc(int) ptr

func main() {

    tys **LLVMTypeRef = malloc(sizeof *LLVMTypeRef * 4) as **LLVMTypeRef
    tys[0] = LLVMInt32Type()
    f *LLVMTypeRef = LLVMFunctionType(LLVMInt32Type(),tys,1 as usize,0)

    printf('%i',LLVMCountParamTypes(f))
}

#else 
#panic("Unimplemented")

#end